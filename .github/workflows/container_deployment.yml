
name: container deployment

on:
  workflow_dispatch:

env:
  ARM_CLIENT_SECRET: ${{  secrets.ARM_CLIENT_SECRET  }}
  ARM_SUBSCRIPTION_ID: ${{  secrets.ARM_SUBSCRIPTION_ID  }}
  ARM_TENANT_ID: ${{  secrets.ARM_TENANT_ID  }}
  ARM_CLIENT_ID: ${{  secrets.ARM_CLIENT_ID  }}

jobs:
  
  deploy_on_azure_container_service:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: configure client secret
      run: export ARM_CLIENT_SECRET=$ARM_CLIENT_SECRET
    
    - name: configure subscription id
      run: export ARM_SUBSCRIPTION_ID=$ARM_SUBSCRIPTION_ID
    
    - name: configure tenant id
      run: export ARM_TENANT_ID=$ARM_TENANT_ID

    - name: configure client id
      run: export ARM_CLIENT_ID=$ARM_CLIENT_ID

    - name: configure client id
      run: |
        echo $ARM_CLIENT_ID
        echo $ARM_TENANT_ID
        echo $ARM_SUBSCRIPTION_ID
        echo $ARM_CLIENT_SECRET

    - name: Initialize Terraform
      working-directory: ./containerization/infrastructure/deploy-container
      run: terraform init

    - name: Try terraform plan
      working-directory: ./containerization/infrastructure/deploy-container
      run: terraform plan -var client_secret="$ARM_CLIENT_SECRET"

    - name: Deploy on azure container service
      working-directory: ./containerization/infrastructure/deploy-container
      run: terraform apply -var client_secret="$ARM_CLIENT_SECRET" -auto-approve